logging:
    config: classpath:logback.xml
spring:
    application:
        name: tech-blog-provider
    main:
        allow-bean-definition-overriding: true
    datasource:
        name: druidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/tech_blog?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    http:
        encoding:
            force: true
            charset: UTF-8
            enabled: true
    servlet:
        multipart:
            enabled: true
            max-request-size: 10000
    thymeleaf:
        enabled: false
        cache: false
    resources:
        chain:
            cache: false
            strategy:
                content:
                    enabled: true
                    paths: /static/**
        cache:
            period: 0
            cachecontrol:
                no-cache: true
    devtools:
        livereload:
            enabled: true
        restart:
            enabled: false
        add-properties: true
    mvc:
        static-path-pattern: /resources/static/**
eureka:
    client:
        serviceUrl:
            defaultZone: http://182.61.49.180:8761/eureka/
    #instance:
    #    prefer-ip-address: true
#    kafka:
#        bootstrap-servers: 192.168.1.160:9092
#        #=============== provider  =======================
#        # 每次批量发送消息的数量
#        producer:
#            retries: 0
#            batch-size: 16384
#            buffer-memory: 33554432
#            # 指定消息key和消息体的编解码方式
#            key-serializer: org.apache.kafka.common.serialization.StringSerializer
#            value-serializer: org.apache.kafka.common.serialization.StringSerializer
#        #=============== consumer  =======================
#        # 指定默认消费者group id
#        consumer:
#            group-id: test-consumer-group
#            auto-offset-reset: earliest
#            enable-auto-commit: true
#            #auto-commit-interval: 100
#            # 指定消息key和消息体的编解码方式
#            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#============== kafka ===================
# 指定kafka 代理地址，可以多个
#    kafka:
#        bootstrap-servers: 198.1.3.123:9092
#        #=============== provider  =======================
#        # 每次批量发送消息的数量
#        producer:
#            retries: 0
#            batch-size: 16384
#            buffer-memory: 33554432
#            # 指定消息key和消息体的编解码方式
#            key-serializer: org.apache.kafka.common.serialization.StringSerializer
#            value-serializer: org.apache.kafka.common.serialization.StringSerializer
#        #=============== consumer  =======================
#        # 指定默认消费者group id
#        consumer:
#            group-id: test-consumer-group
#            auto-offset-reset: earliest
#            enable-auto-commit: true
#            #auto-commit-interval: 100
#            # 指定消息key和消息体的编解码方式
#            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    quartz:
#        #相关属性配置
#        properties:
#          org:
#            quartz:
#              scheduler:
#                instanceName: clusteredScheduler
#                instanceId: AUTO
#              jobStore:
#                class: org.quartz.impl.jdbcjobstore.JobStoreTX
#                driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#                tablePrefix: QRTZ_
#                isClustered: true
#                clusterCheckinInterval: 10000
#                useProperties: false
#              threadPool:
#                class: org.quartz.simpl.SimpleThreadPool
#                threadCount: 10
#                threadPriority: 5
#                threadsInheritContextClassLoaderOfInitializingThread: true
#        #数据库方式 jdbc
#        job-store-type: jdbc
#        #初始化表结构
#        jdbc:
#          initialize-schema: always
#max-file-size: 50M
#max-request-size: 50M
mybatis:
    configuration:
        map-underscore-to-camel-case: true
    type-aliases-package: com.lhfeiyu.tech.mapper.model
    mapper-locations: classpath*:com.lhfeiyu.tech.blog.mapper/*.xml
server:
    port: 8888
    error:
        path: /custom/error
    tomcat:
        uri-encoding: utf-8
        resource:
            cache-ttl: 0
airson:
    hello: 2
